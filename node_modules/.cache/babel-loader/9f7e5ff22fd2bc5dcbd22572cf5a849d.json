{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Desktop/todo/todo/src/components/TasksListing.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport { MyContext } from \"../App\";\nimport { Task } from './ListStyled';\nimport { TaskContainer } from './ListStyled';\nimport { StyledApp } from '../AppStyled';\nimport { ThemeProvider } from \"styled-components\";\nimport { StyledButton, StyledH1 } from \"../AppStyled\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TasksListing = () => {\n  _s();\n\n  const {\n    list,\n    theme,\n    GlobalStyled,\n    onShowEditTaskForm,\n    clicked,\n    setClicked\n  } = useContext(MyContext);\n\n  const handleCallback = id => {\n    onShowEditTaskForm(id);\n    setClicked(id);\n    console.log(`id`, id, clicked);\n  };\n\n  return /*#__PURE__*/_jsxDEV(TaskContainer, {\n    children: [/*#__PURE__*/_jsxDEV(StyledH1, {\n      children: list.length ? `Tasks Details` : `Task Details Is Empty`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(StyledApp, {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(ThemeProvider, {\n        theme: theme,\n        children: [/*#__PURE__*/_jsxDEV(GlobalStyled, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 21\n        }, this), list.map((item, i) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: `${clicked === item.id ? `none` : `block`}`,\n                height: \"60px\",\n                marginTop: \"30px\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(Task, {\n                children: [\" \", /*#__PURE__*/_jsxDEV(\"p\", {\n                  style: {\n                    color: \"red\",\n                    display: \"inline\"\n                  },\n                  children: \" Title:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 29,\n                  columnNumber: 42\n                }, this), \" \", item.title, \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n                  style: {\n                    color: \"red\",\n                    display: \"inline\"\n                  },\n                  children: \" Desciption: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 29,\n                  columnNumber: 111\n                }, this), item.description, \" \"]\n              }, item.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 29,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(StyledButton, {\n                color: \"warning\",\n                onClick: () => {\n                  handleCallback(item.id);\n                },\n                type: \"button\",\n                children: \"Update\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 30,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 21\n            }, this)\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 28\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TasksListing, \"v/oJf8OKNQSZN83cb7vkiPbqt1s=\");\n\n_c = TasksListing;\nexport default TasksListing;\n\nvar _c;\n\n$RefreshReg$(_c, \"TasksListing\");","map":{"version":3,"sources":["/Users/apple/Desktop/todo/todo/src/components/TasksListing.jsx"],"names":["React","useContext","MyContext","Task","TaskContainer","StyledApp","ThemeProvider","StyledButton","StyledH1","TasksListing","list","theme","GlobalStyled","onShowEditTaskForm","clicked","setClicked","handleCallback","id","console","log","length","map","item","i","display","height","marginTop","color","title","description"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,UAAf,QAAgC,OAAhC;AACA,SAAQC,SAAR,QAAwB,QAAxB;AAEA,SAAQC,IAAR,QAAkB,cAAlB;AACA,SAAQC,aAAR,QAA2B,cAA3B;AACA,SAAQC,SAAR,QAAwB,cAAxB;AACA,SAASC,aAAT,QAA6B,mBAA7B;AACA,SAAQC,YAAR,EAAqBC,QAArB,QAAoC,cAApC;;;AAEA,MAAMC,YAAY,GAAG,MAAM;AAAA;;AACvB,QAAM;AAAEC,IAAAA,IAAF;AAAOC,IAAAA,KAAP;AAAaC,IAAAA,YAAb;AAA0BC,IAAAA,kBAA1B;AAA6CC,IAAAA,OAA7C;AAAqDC,IAAAA;AAArD,MAAoEd,UAAU,CAACC,SAAD,CAApF;;AACA,QAAMc,cAAc,GAAEC,EAAD,IAAM;AACvBJ,IAAAA,kBAAkB,CAACI,EAAD,CAAlB;AACAF,IAAAA,UAAU,CAACE,EAAD,CAAV;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAa,IAAb,EAAkBF,EAAlB,EAAqBH,OAArB;AACH,GAJD;;AAKA,sBACI,QAAC,aAAD;AAAA,4BACgB,QAAC,QAAD;AAAA,gBAAWJ,IAAI,CAACU,MAAL,GAAc,eAAd,GAA8B;AAAzC;AAAA;AAAA;AAAA;AAAA,YADhB,eAGA,QAAC,SAAD;AAAW,MAAA,SAAS,EAAC,KAArB;AAAA,6BACQ,QAAC,aAAD;AAAe,QAAA,KAAK,EAAET,KAAtB;AAAA,gCACI,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,gBADJ,EAIAD,IAAI,CAACW,GAAL,CAAS,CAACC,IAAD,EAAMC,CAAN,KAAU;AACf,8BAAO;AAAA,mCACP;AAAK,cAAA,KAAK,EAAE;AAACC,gBAAAA,OAAO,EAAE,GAAEV,OAAO,KAAGQ,IAAI,CAACL,EAAf,GAAmB,MAAnB,GAA0B,OAAO,EAA7C;AAA+CQ,gBAAAA,MAAM,EAAC,MAAtD;AAA6DC,gBAAAA,SAAS,EAAC;AAAvE,eAAZ;AAAA,sCACF,QAAC,IAAD;AAAA,6CAAuB;AAAG,kBAAA,KAAK,EAAE;AAACC,oBAAAA,KAAK,EAAC,KAAP;AAAaH,oBAAAA,OAAO,EAAC;AAArB,mBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAvB,OAA+EF,IAAI,CAACM,KAApF,oBAA4F;AAAG,kBAAA,KAAK,EAAE;AAACD,oBAAAA,KAAK,EAAC,KAAP;AAAaH,oBAAAA,OAAO,EAAC;AAArB,mBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAA5F,EAAwJF,IAAI,CAACO,WAA7J;AAAA,iBAAYP,IAAI,CAACL,EAAjB;AAAA;AAAA;AAAA;AAAA,sBADE,eAEJ,QAAC,YAAD;AAAc,gBAAA,KAAK,EAAC,SAApB;AAA8B,gBAAA,OAAO,EAAE,MAAM;AAACD,kBAAAA,cAAc,CAACM,IAAI,CAACL,EAAN,CAAd;AAA0B,iBAAxE;AAA4E,gBAAA,IAAI,EAAC,QAAjF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFI;AAAA;AAAA;AAAA;AAAA;AAAA;AADO,aAAUM,CAAV;AAAA;AAAA;AAAA;AAAA,kBAAP;AAOH,SARD,CAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AADR;AAAA;AAAA;AAAA;AAAA,YAHA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAyBH,CAhCD;;GAAMd,Y;;KAAAA,Y;AAkCN,eAAeA,YAAf","sourcesContent":["import React, {useContext} from 'react';\nimport {MyContext} from \"../App\";\n\nimport {Task} from'./ListStyled'\nimport {TaskContainer} from'./ListStyled'\nimport {StyledApp} from '../AppStyled'\nimport { ThemeProvider} from \"styled-components\";\nimport {StyledButton,StyledH1} from \"../AppStyled\"\n\nconst TasksListing = () => {\n    const { list,theme,GlobalStyled,onShowEditTaskForm,clicked,setClicked } = useContext(MyContext);\n    const handleCallback=(id)=>{\n        onShowEditTaskForm(id)\n        setClicked(id)\n        console.log(`id`, id,clicked)\n    }\n    return (\n        <TaskContainer>\n                        <StyledH1>{list.length? `Tasks Details`:`Task Details Is Empty`}</StyledH1>\n\n        <StyledApp className=\"App\">\n                <ThemeProvider theme={theme}>\n                    <GlobalStyled/>\n\n            {\n                list.map((item,i)=>{\n                    return <div key={i}> \n                    <div style={{display:`${clicked===item.id?`none`:`block`}`,height:\"60px\",marginTop:\"30px\" }}>\n                  <Task  key={item.id} > <p style={{color:\"red\",display:\"inline\"}} > Title:</p> {item.title } <p style={{color:\"red\",display:\"inline\"}}> Desciption: </p>{item.description } </Task> \n                <StyledButton color=\"warning\" onClick={() => {handleCallback(item.id)  }  } type=\"button\">Update</StyledButton>\n                </div> \n                </div>\n\n                })\n            }\n            </ThemeProvider>\n             </StyledApp>\n        </TaskContainer>\n       \n\n    );\n};\n\nexport default TasksListing;\n"]},"metadata":{},"sourceType":"module"}