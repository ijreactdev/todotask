{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Desktop/todo/todo/src/components/TaskForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport { Form, withFormik } from \"formik\";\nimport { MyContext } from \"../App\";\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { StyledFields, StyledTaskForm, StyledFieldBlock, SaveStyledButton, ControlBlock } from './FormStyled';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TaskForm = ({\n  showNew,\n  onHideTaskForm,\n  dirty\n}) => {\n  _s();\n\n  const {\n    setClicked\n  } = useContext(MyContext);\n\n  const handleClick = () => {\n    setClicked(null);\n    notify();\n  };\n\n  const notify = () => toast.success(\"Task done!\");\n\n  const notifyError = () => toast.error(\"Task cancel\");\n\n  return /*#__PURE__*/_jsxDEV(StyledTaskForm, {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(StyledFieldBlock, {\n        borderBottom: true,\n        children: /*#__PURE__*/_jsxDEV(StyledFields, {\n          placeholder: \"Task name\",\n          name: \"title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(StyledFieldBlock, {\n        children: /*#__PURE__*/_jsxDEV(StyledFields, {\n          placeholder: \"Task description\",\n          name: \"description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ControlBlock, {\n        children: [/*#__PURE__*/_jsxDEV(SaveStyledButton, {\n          color: \"primary\",\n          type: \"button\",\n          style: {\n            marginTop: \"10px\"\n          },\n          onClick: () => {\n            onHideTaskForm();\n            notifyError();\n          },\n          outline: true,\n          children: \"cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(SaveStyledButton, {\n          color: \"primary\",\n          onClick: handleClick,\n          style: {\n            marginTop: \"10px\"\n          },\n          disabled: !dirty,\n          type: \"submit\",\n          children: showNew ? \"ADD\" : \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TaskForm, \"fmtc7kCCOXaLU7h6OGIm/DqfJAc=\");\n\n_c = TaskForm;\n\nconst getNewId = () => {\n  return `f${(+new Date()).toString(16)}`;\n};\n\nconst FormikTaskForm = withFormik({\n  mapPropsToValues({\n    active\n  }) {\n    return {\n      id: active && active.id || '',\n      title: active && active.title || '',\n      description: active && active.description || ''\n    };\n  },\n\n  handleSubmit(values, {\n    props\n  }) {\n    if (values.id) {\n      props.editTask({ ...values,\n        id: values.id\n      });\n    } else {\n      props.addTask({ ...values,\n        id: getNewId()\n      });\n    }\n  },\n\n  enableReinitialize: true\n})(TaskForm);\nexport default FormikTaskForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskForm\");","map":{"version":3,"sources":["/Users/apple/Desktop/todo/todo/src/components/TaskForm.jsx"],"names":["React","useContext","Form","withFormik","MyContext","toast","StyledFields","StyledTaskForm","StyledFieldBlock","SaveStyledButton","ControlBlock","TaskForm","showNew","onHideTaskForm","dirty","setClicked","handleClick","notify","success","notifyError","error","marginTop","getNewId","Date","toString","FormikTaskForm","mapPropsToValues","active","id","title","description","handleSubmit","values","props","editTask","addTask","enableReinitialize"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,UAAd,QAA+B,OAA/B;AACA,SAAQC,IAAR,EAAcC,UAAd,QAA+B,QAA/B;AACA,SAAQC,SAAR,QAAwB,QAAxB;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,OAAO,uCAAP;AAEA,SACIC,YADJ,EAEIC,cAFJ,EAGIC,gBAHJ,EAIIC,gBAJJ,EAKIC,YALJ,QAMO,cANP;;;AAQA,MAAMC,QAAQ,GAAG,CAAC;AAACC,EAAAA,OAAD;AAAUC,EAAAA,cAAV;AAAyBC,EAAAA;AAAzB,CAAD,KAAsC;AAAA;;AACnD,QAAM;AAACC,IAAAA;AAAD,MAAgBd,UAAU,CAACG,SAAD,CAAhC;;AACA,QAAMY,WAAW,GAAC,MAAI;AAClBD,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAE,IAAAA,MAAM;AACT,GAHD;;AAIA,QAAMA,MAAM,GAAG,MAAMZ,KAAK,CAACa,OAAN,CAAc,YAAd,CAArB;;AACA,QAAMC,WAAW,GAAG,MAAMd,KAAK,CAACe,KAAN,CAAY,aAAZ,CAA1B;;AAEA,sBACI,QAAC,cAAD;AAAA,2BACI,QAAC,IAAD;AAAA,8BACI,QAAC,gBAAD;AAAkB,QAAA,YAAY,MAA9B;AAAA,+BACI,QAAC,YAAD;AAAc,UAAA,WAAW,EAAC,WAA1B;AAAsC,UAAA,IAAI,EAAC;AAA3C;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI,QAAC,gBAAD;AAAA,+BACI,QAAC,YAAD;AAAc,UAAA,WAAW,EAAC,kBAA1B;AAA6C,UAAA,IAAI,EAAC;AAAlD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cALJ,eAQI,QAAC,YAAD;AAAA,gCACI,QAAC,gBAAD;AAAkB,UAAA,KAAK,EAAC,SAAxB;AAAkC,UAAA,IAAI,EAAC,QAAvC;AAAgD,UAAA,KAAK,EAAE;AAACC,YAAAA,SAAS,EAAC;AAAX,WAAvD;AAA2E,UAAA,OAAO,EAAE,MAAI;AAACR,YAAAA,cAAc;AAAGM,YAAAA,WAAW;AAAI,WAAzH;AAA2H,UAAA,OAAO,MAAlI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,gBAAD;AAAkB,UAAA,KAAK,EAAC,SAAxB;AAAkC,UAAA,OAAO,EAAEH,WAA3C;AAAwD,UAAA,KAAK,EAAE;AAACK,YAAAA,SAAS,EAAC;AAAX,WAA/D;AAAmF,UAAA,QAAQ,EAAE,CAACP,KAA9F;AAAqG,UAAA,IAAI,EAAC,QAA1G;AAAA,oBACKF,OAAO,GAAG,KAAH,GAAW;AADvB;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cARJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAqBH,CA9BD;;GAAMD,Q;;KAAAA,Q;;AAgCN,MAAMW,QAAQ,GAAG,MAAM;AACnB,SAAQ,IAAG,CAAC,CAAC,IAAIC,IAAJ,EAAF,EAAcC,QAAd,CAAuB,EAAvB,CAA2B,EAAtC;AACH,CAFD;;AAIA,MAAMC,cAAc,GAAGtB,UAAU,CAAC;AAC9BuB,EAAAA,gBAAgB,CAAC;AAACC,IAAAA;AAAD,GAAD,EAAU;AACtB,WAAM;AACFC,MAAAA,EAAE,EAAGD,MAAM,IAAIA,MAAM,CAACC,EAAlB,IAAyB,EAD3B;AAEFC,MAAAA,KAAK,EAAGF,MAAM,IAAIA,MAAM,CAACE,KAAlB,IAA4B,EAFjC;AAGFC,MAAAA,WAAW,EAAGH,MAAM,IAAIA,MAAM,CAACG,WAAlB,IAAkC;AAH7C,KAAN;AAKH,GAP6B;;AAQ9BC,EAAAA,YAAY,CAACC,MAAD,EAAS;AAACC,IAAAA;AAAD,GAAT,EAAkB;AAC1B,QAAID,MAAM,CAACJ,EAAX,EAAc;AACVK,MAAAA,KAAK,CAACC,QAAN,CAAe,EACX,GAAGF,MADQ;AAEXJ,QAAAA,EAAE,EAAEI,MAAM,CAACJ;AAFA,OAAf;AAIH,KALD,MAKO;AACHK,MAAAA,KAAK,CAACE,OAAN,CAAc,EACV,GAAGH,MADO;AAEVJ,QAAAA,EAAE,EAAEN,QAAQ;AAFF,OAAd;AAIH;AACJ,GApB6B;;AAqB9Bc,EAAAA,kBAAkB,EAAG;AArBS,CAAD,CAAV,CAsBpBzB,QAtBoB,CAAvB;AAwBA,eAAec,cAAf","sourcesContent":["import React,{useContext} from 'react';\nimport {Form, withFormik} from \"formik\";\nimport {MyContext} from \"../App\";\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport {\n    StyledFields,\n    StyledTaskForm,\n    StyledFieldBlock,\n    SaveStyledButton,\n    ControlBlock,\n} from './FormStyled'\n\nconst TaskForm = ({showNew, onHideTaskForm,dirty }) => {\n    const {setClicked } = useContext(MyContext);\n    const handleClick=()=>{\n        setClicked(null);\n        notify();\n    }\n    const notify = () => toast.success(\"Task done!\");\n    const notifyError = () => toast.error(\"Task cancel\");\n\n    return (\n        <StyledTaskForm>\n            <Form>\n                <StyledFieldBlock borderBottom>\n                    <StyledFields placeholder=\"Task name\" name=\"title\"/>\n\n                </StyledFieldBlock>\n                <StyledFieldBlock>\n                    <StyledFields placeholder=\"Task description\" name=\"description\"/>\n                </StyledFieldBlock>\n                <ControlBlock>\n                    <SaveStyledButton color=\"primary\" type=\"button\" style={{marginTop:\"10px\"}} onClick={()=>{onHideTaskForm();notifyError();}} outline>cancel</SaveStyledButton>\n                    <SaveStyledButton color=\"primary\" onClick={handleClick} style={{marginTop:\"10px\"}} disabled={!dirty} type=\"submit\">\n                        {showNew ? \"ADD\" : \"Update\"}\n\n                    </SaveStyledButton>\n                    \n                </ControlBlock>\n            </Form>\n        </StyledTaskForm>\n    );\n};\n\nconst getNewId = () => {\n    return `f${(+new Date()).toString(16)}`;\n};\n\nconst FormikTaskForm = withFormik({\n    mapPropsToValues({active}){\n        return{\n            id: (active && active.id) || '',\n            title: (active && active.title) || '',\n            description: (active && active.description) || '',\n        }\n    },\n    handleSubmit(values, {props}) {\n        if (values.id){\n            props.editTask({\n                ...values,\n                id: values.id\n            });\n        } else {\n            props.addTask({\n                ...values,\n                id: getNewId()\n            });\n        }\n    },\n    enableReinitialize : true,\n})(TaskForm);\n\nexport default FormikTaskForm;\n"]},"metadata":{},"sourceType":"module"}